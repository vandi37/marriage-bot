import {InlineKeyboard} from "grammy";
import {generateMention, stringifyMention} from "./mention";
import {User} from "grammy/types";
import {ChatFullInfo} from "grammy/out/types";
import humanizeDuration from "humanize-duration";

export function requestMarriageText(mention: string | User, from: User) {
    return `üíç ${generateMention(mention)}, ${generateMention(from)} —Å–¥–µ–ª–∞–ª –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä—É–∫–∏ –∏ —Å–µ—Ä–¥—Ü–∞`
}

export function requestMarriageButtons(mention: string | User, from: User) {
    return new InlineKeyboard()
        .text('üíù –°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è', `answer_${from.id}_${stringifyMention(mention)}`)
        .text('üíî –û—Ç–∫–∞–∑–∞—Ç—å—Å—è', `deny_${from.id}_${stringifyMention(mention)}`)
}
export function divorceText(from: User, other: ChatFullInfo) {
    return `üò∞ ${generateMention(from)}, –≤—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å —Å ${generateMention(other)}`
}
export function divorceButtons(marriageId: any) {
    return new InlineKeyboard()
        .text('‚úÖ –î–∞', `divorce_${marriageId}`)
        .text('‚ùå –ù–µ—Ç', `divorce_deny_${marriageId}`)
}

export function marriageInfoText(from: User, other: ChatFullInfo, createdAt: Date) {
    const russianDuration = humanizeDuration(createdAt.valueOf() - Date.now(), {
        language: 'ru',
        largest: 2
    })
    return `ü´∂ –ë—Ä–∞–∫ –º–µ–∂–¥—É ${generateMention(from)} –∏ ${generateMention(other)}\nüïì –î–ª–∏—Ç—Å—è ${russianDuration}`
}